package main

import (
	"fmt"
	"net"
	"runtime"
	"time"
	"container/list"
)

 
func Init() {
	mySelf := new(Status)
	mySelf.laddr = "129.241.187.255"
	mySelf.floor = 1
	mySelf.direction = 2
	mySelf.destination = 2
	
	heiser.PushBack(mySelf)
	//Get floor, direction,destination
	//Set up WorkList
	// Store in heiser.Front()
}


func StatusUpdate(status Status){
	// Update heiser with received statuses
	
	
}

func UDPSendWork(){		//Sending work

}


func UDPSendStatus( ){		//Sending status every x.xx second
	msg := make([]byte, 1024)
	
	for {
		conn, _ := net.Dial("udp", "129.241.187.255:13000")
		copy(msg[:],heiser.Front())   	// SYNTAXX??
		conn.Write(msg)
		conn.Close()
	}
	
	
}

func UDPReceiveStatus(baddr net.UDPAddr){	//Receive status
	status := make([]byte, 1024)
	
	
		
	for {	
		conn, _ := net.ListenUDP("udp", &baddr)
		conn.Read(status)
		fmt.Printf("%s\n",status)
		conn.Close()
		
	}
	
	


	

}

/*func UDPReceiveWork(){		//Receive work

}*/


func main(){
	//Broadcast address
	baddr := net.UDPAddr{
		Port: 13000,
		IP: net.ParseIP("129.241.187.255"),
	}
	runtime.GOMAXPROCS(runtime.NumCPU())
	
	
	//go UDPStatusUpdate()		//Updates local status & puts it in heiser
	go UDPSendStatus()		//Sending current status to all the other heiser
	go UDPReceiveStatus(baddr)	//Receiving statuses and stores them in heiser
	//go UDPReceiveWork()		//Receiving work and puts them in workList
	
	time.Sleep(2*time.Second)
	

}
